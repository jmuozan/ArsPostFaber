<Project Sdk="Microsoft.NET.Sdk">
	
    <PropertyGroup>
    <!-- Select the framework(s) you wish to target.
        Rhino 6: net45
        Rhino 7: net48
        Rhino 8 Windows: net48, net7.0, net7.0-windows, net7.0-windows10.0.22000.0, etc
        Rhino 8 Mac: net7.0, net7.0-macos, net7.0-macos12.0, etc
    -->
    <!-- Target only net7.0 (multi-targeting WindowsDesktop causes build errors on macOS) -->
    <TargetFrameworks>net7.0</TargetFrameworks>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <TargetExt>.gha</TargetExt>
    <NoWarn>NU1701;NETSDK1086</NoWarn>
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
  </PropertyGroup>
  
  <PropertyGroup>
    <!-- Define WINDOWS on Windows and exclude the Segment-Anything folder -->
    <DefineConstants Condition="'$(OS)' == 'Windows_NT'">$(DefineConstants);WINDOWS</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup>
    <!-- Exclude Segment-Anything folder from build since it contains WPF code -->
    <Compile Remove="Segment-Anything\**" />
      <!-- Exclude sim folder (examples) from build until integrated -->
    <EmbeddedResource Remove="Segment-Anything\**" />
    <None Remove="Segment-Anything\**" />
    
    <!-- Exclude mp folder from build since it contains duplicate definitions -->
    <Compile Remove="mp\**" />
    <EmbeddedResource Remove="mp\**" />
    <None Remove="mp\**" />
    <!-- Exclude GeneratedComponents from build as they are generated at runtime -->
    <Compile Remove="GeneratedComponents\**\*.cs" />
    <!-- Exclude PythonNETGrasshopperTemplate folder from build -->
    <Compile Remove="PythonNETGrasshopperTemplate\**" />
    <EmbeddedResource Remove="PythonNETGrasshopperTemplate\**" />
    <None Remove="PythonNETGrasshopperTemplate\**" />
  </ItemGroup>
  
  <PropertyGroup>
    <!-- Specifies information for Assembly and Yak -->
    <Version>1.0</Version>
    <Title>crft</Title>
    <Company>crft Authors</Company>
    <Description>Description of crft</Description>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Grasshopper" Version="8.0.23304.9001" ExcludeAssets="runtime" />
    <PackageReference Include="Mediapipe" Version="1.0.0.1" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="OpenCvSharp4" Version="4.10.0.20241108" />
    <PackageReference Include="OpenCvSharp4.Extensions" Version="4.10.0.20241108" />
    <PackageReference Include="OpenCvSharp4.runtime.osx.10.15-universal" Version="4.7.0.20230224" />
    <PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.16.3" />
    <PackageReference Include="Python.Runtime" Version="2.7.9" />
    <PackageReference Include="System.IO.Ports" Version="7.0.0" />
    <!-- Cross-platform serial support -->
    <PackageReference Include="SerialPortStream" Version="2.4.2" />
    <!-- CodeDom for dynamic compilation -->
    <PackageReference Include="System.CodeDom" Version="7.0.0" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <!-- Roslyn compiler for cross-platform code generation -->
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.6.0" />
    <!-- PDF context extraction -->
    <PackageReference Include="PdfPig" Version="0.1.9" />
    <!-- PDF Library for text extraction -->
    <PackageReference Include="itext7" Version="7.2.5" />
  </ItemGroup>
  
  <ItemGroup>
    <!-- Include native library for OpenCV -->
    <None Include="lib/native/libOpenCvSharpExtern.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <!-- Hand tracking Python script -->
    <None Include="scripts/meshedit/hands.py">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <!-- Use RuntimeIdentifier to ensure native libraries are properly included -->
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <RuntimeIdentifier>osx-arm64</RuntimeIdentifier>
  </PropertyGroup>

  <ItemGroup>
    <!-- AForge references -->
    <Reference Include="AForge">
      <HintPath>lib\AForge\Release\AForge.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="AForge.Video">
      <HintPath>lib\AForge\Release\AForge.Video.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="AForge.Video.DirectShow">
      <HintPath>lib\AForge\Release\AForge.Video.DirectShow.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  
  <!-- For Windows only builds -->
  <PropertyGroup Condition="$(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4'))">
    <UseWindowsForms>true</UseWindowsForms>
  </PropertyGroup>

  <!-- Reference WinForms for .NET 7.0 on macOS -->
  <ItemGroup Condition="!($(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4')))">
    <!-- Rhino 8.11 and later you can use this -->
    <!-- <FrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms" /> -->
    
    <!-- Rhino 8.10 and earlier -->
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies.net48" Version="1.0.3" ExcludeAssets="all" GeneratePathProperty="true" />
    <Reference Include="$(PkgMicrosoft_NETFramework_ReferenceAssemblies_net48)\build\.NETFramework\v4.8\System.Windows.Forms.dll" Private="False" />
    <PackageReference Include="System.Drawing.Common" Version="8.0.0" ExcludeAssets="runtime" />
  </ItemGroup>
  
  <!-- macOS-specific references - commented out to use mock classes instead
  <ItemGroup Condition="'$(OS)' != 'Windows_NT'">
    <PackageReference Include="Xamarin.Mac" Version="1.0.0" />
    <PackageReference Include="Xamarin.Essentials" Version="1.7.5" />
  </ItemGroup>
  -->

  <!-- Embed Mesh Editor Python scripts as embedded resources -->
  <ItemGroup>
    <EmbeddedResource Include="scripts\meshedit\gh_edit.py" />
    <EmbeddedResource Include="scripts\meshedit\meshedit.py" />
    <EmbeddedResource Include="scripts\meshedit\hands.py" />
  </ItemGroup>
  <!-- Include photogrammetry binary in output -->
  <ItemGroup>
    <None Include="scripts\photogrammetry\HelloPhotogrammetry">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <!-- Include context_for_llm folder content in output for LLM context -->
  <ItemGroup>
    <None Include="context_for_llm\**\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <!-- Cross-platform preview UI dependencies -->
  <ItemGroup>
    <!-- Eto.Forms and Mac platform implementation for cross-platform preview -->
    <PackageReference Include="Eto.Forms" Version="2.5.1" />
    <PackageReference Include="Eto.Platform.Mac64" Version="2.5.1" />
  </ItemGroup>
  <ItemGroup>
    <!-- QR code generation library -->
    <PackageReference Include="QRCoder" Version="1.4.3" />
  </ItemGroup>

</Project>